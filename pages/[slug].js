import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { gql } from "@apollo/client";
import client from "../apollo-client";
import Link from 'next/link'
import PageBlocks  from '../components/PageBlocks';

export default function Page({ singlePost }) {

    return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <ul>
            <li><Link href={`/all-components`}><a>All Comps</a></Link></li>
            <li><Link href={`/about`}><a>About</a></Link></li>
            <li><Link href={`/agenda`}><a>Agenda</a></Link></li>
            <li><Link href={`/partners`}><a>Partners</a></Link></li>
            
        </ul>
        <h2>{singlePost.title}</h2>
        <PageBlocks content={ singlePost['pageBlocks'] } />
      </main>
     
    </div>
  )
}


export async function getServerSideProps(context) {
    const { slug } = context.query
    const { data } = await client.query({
    query: gql`
    query getDublinSingle {
        entry(section: "pages", site: "tnwDublin", slug: "${slug}") {
          id
          slug
          title
          ... on pages_default_Entry {
            id
            pageBlocks {
              ... on pageBlocks_video_BlockType {
                __typename
                id
                title
              }
              ... on pageBlocks_tickets_BlockType {
                __typename
                id
                title
                heading
                tickets {
                  ... on tickets_default_Entry {
                    id
                    sectionHandle
                    slug
                    title
                    ticketDescription
                    ticketLink
                    ticketLinktext
                    ticketName
                    ticketPrice
                    ticketVat
                  }
                }
              }
              ... on pageBlocks_textVisual_BlockType {
                __typename
                id
                title
                textVisualHeading
                textVisualContent
                textVisualCta {
                  ... on textVisualCta_BlockType {
                    id
                    tvCtaText
                    tvCtaLink
                    tvCtaIsBlank
                  }
                }
              }
              ... on pageBlocks_text_BlockType {
                __typename
                id
                column1
                column2
                heading
              }
              ... on pageBlocks_stats_BlockType {
                __typename
                id
                title
              }
              ... on pageBlocks_sponsors_BlockType {
                __typename
                id
                sponsorsTitle
              }
              ... on pageBlocks_speakers_BlockType {
                __typename
                id
                title
              }
              ... on pageBlocks_signup_BlockType {
                __typename
                id
              }
              ... on pageBlocks_sessions_BlockType {
                __typename
                id
              }
              ... on pageBlocks_rewards_BlockType {
                __typename
                id
              }
              ... on pageBlocks_partners_BlockType {
                __typename
                id
              }
              ... on pageBlocks_hero_BlockType {
                __typename
                id
                heading
                eyebrow
                ctaTitle
                ctaLink
              }
              ... on pageBlocks_faq_BlockType {
                __typename
                id
              }
              ... on pageBlocks_columns_BlockType {
                __typename
                id
              }
              ... on pageBlocks_challenges_BlockType {
                __typename
                id
              }
              ... on pageBlocks_blocks_BlockType {
                __typename
                id
              }
            }
          }
        }
      }
    
    `,
  });
  return {
    props: {
      singlePost: data.entry,
      slug: slug
    },
 };
}
